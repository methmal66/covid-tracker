{"version":3,"sources":["Components/Map.jsx","Reducers/countries.js","Reducers/choosenCountry.js","Reducers/global.js","Reducers/option.js","Reducers/index.js","util.js","Components/SimpleCard.jsx","Actions/option.js","Components/Header.jsx","Actions/choosenCountry.js","Components/SimpleCardList.jsx","Components/Marker.jsx","Components/LineGraph.jsx","Components/Summary.jsx","App.js","Actions/countries.js","Actions/global.js","reportWebVitals.js","index.js"],"names":["option","init","countries","state","action","type","payload","map","dataItem","name","country","lat","countryInfo","lng","long","flag","cases","newCases","todayCases","recovered","newRecovered","todayRecovered","deaths","newDeaths","todayDeaths","choosenCountry","global","console","log","rootReducer","combineReducers","store","createStore","composeWithDevTools","formatNumber","num","formattedNumber","numeral","format","formatNewNumber","formatedNumber","concat","formatPercentage","sortBy","a","b","getColor","useStyles","makeStyles","root","padding","backgroundColor","SimpleCard","title","_new","total","thisOption","classes","dispatch","useDispatch","Paper","className","onClick","Typography","variant","Header","lg","useSelector","FormControl","Select","value","onChange","event","target","allNames","eachCountry","sort","unshift","MenuItem","SimpleCardList","xs","filter","Grid","item","container","spacing","width","height","borderRadius","Marker","style","clsx","styles","Map","center","countryName","markersData","reverse","forEach","data","heighestCount","thisCountryCount","relativeDiameter","diameter","bgColor","transform","markerElements","bootstrapURLKeys","key","defaultCenter","defaultZoom","LineGraph","useState","points","setPoints","datasets","pointBackgroundColor","pointBorderWidth","pointRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderWidth","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","useEffect","fetch","then","response","json","dataToDisplay","obj","array","Object","entries","i","length","todayGrowthRate","newPoint","x","y","push","formatPoints","theme","table","margin","overflow","row","justifyContent","Summary","foundData","sortFunction","eachData","App","setCountries","setGlobal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eac7ada2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"leaflet/dist/leaflet.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Marker from \"./Marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport { sortBy, findRelativeDiameter, getColor } from \"../util\";\n\nlet option;\nlet styles = {\n  root: {\n    height: \"640px\",\n  },\n};\nconst Map = ({ lg, xs }) => {\n  const center = useSelector((state) => {\n    let countryName = state.choosenCountry;\n\n    if (state.choosenCountry === \"World Wide\") {\n      countryName = \"Sri Lanka\";\n    }\n\n    const country = state.countries.filter(\n      (eachCountry) => eachCountry.name === countryName\n    )[0];\n\n    if (country) {\n      const position = {\n        lat: country.lat,\n        lng: country.lng,\n      };\n      return position;\n    }\n    return {\n      lat: 7,\n      lng: 81,\n    };\n  });\n\n  const markersData = useSelector((state) => {\n    const { countries } = state;\n    option = state.option;\n    countries.sort(sortBy(option)).reverse();\n    return countries;\n  });\n\n  markersData.forEach((data) => {\n    const heighestCount = markersData[0][option];\n    let thisCountryCount = data[option];\n    let relativeDiameter = findRelativeDiameter(\n      heighestCount,\n      thisCountryCount\n    );\n    data.diameter = relativeDiameter;\n\n    const bgColor = getColor(option);\n    styles[data.diameter] = {\n      transform: `scale(${data.diameter})`,\n      backgroundColor: bgColor,\n    };\n  });\n\n  const useStyles = makeStyles(() => styles);\n  const classes = useStyles();\n  const markerElements = markersData.map((data) => (\n    <Marker style={classes[data.diameter]} lat={data.lat} lng={data.lng} />\n  ));\n\n  return (\n    <Grid item lg={lg} xs={xs}>\n      <div className={classes.root}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyB14xbMSEg46WaKyjJo1cufzAxRS36hFhQ\" }}\n          defaultCenter={center}\n          defaultZoom={3}\n        >\n          {markerElements}\n        </GoogleMapReact>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Map;\n","const init = [];\n\nconst countries = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_COUNTRIES\":\n      const countries = action.payload.map((dataItem) => ({\n        name: dataItem.country,\n        lat: dataItem.countryInfo.lat,\n        lng: dataItem.countryInfo.long,\n        flag: dataItem.countryInfo.flag,\n        cases: dataItem.cases,\n        newCases: dataItem.todayCases,\n        recovered: dataItem.recovered,\n        newRecovered: dataItem.todayRecovered,\n        deaths: dataItem.deaths,\n        newDeaths: dataItem.todayDeaths,\n      }));\n      return countries;\n\n    default:\n      return state;\n  }\n};\n\nexport default countries;\n","const init = \"World Wide\";\n\nconst choosenCountry = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_CHOOSEN_COUNTRY\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default choosenCountry;\n","const init = {};\n\nconst global = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_GLOBAL\":\n      console.log(\"global is set\");\n      return {\n        cases: action.payload.cases,\n        newCases: action.payload.todayCases,\n        recovered: action.payload.recovered,\n        newRecovered: action.payload.todayRecovered,\n        deaths: action.payload.deaths,\n        newDeaths: action.payload.todayDeaths,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default global;\n","const init = \"cases\";\n\nconst option = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_OPTION\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default option;\n","import { combineReducers, createStore } from \"redux\";\nimport countries from \"./countries\";\nimport choosenCountry from \"./choosenCountry\";\nimport global from \"./global\";\nimport option from \"./option\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst rootReducer = combineReducers({\n  countries,\n  choosenCountry,\n  global,\n  option,\n});\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import numeral from \"numeral\";\n\nexport const formatNumber = (num = 0) => {\n  const formattedNumber = numeral(num).format(\"0,0\");\n  return formattedNumber;\n};\n\nexport const formatNewNumber = (num) => {\n  const formatedNumber = formatNumber(num);\n  const formatedNewNumber = \"+\".concat(formatedNumber);\n  return formatedNewNumber;\n};\n\nexport const formatPercentage = (num) => {\n  const formatedNumber = formatNumber(num);\n  const formatedPercentage = formatedNumber.concat(\"%\");\n  return formatedPercentage;\n};\n\nexport const sortBy = (option) => {\n  const func = (a, b) => a[option] - b[option];\n  return func;\n};\n\nexport const getColor = (option) => {\n  const OPTIONS = {\n    cases: \"rgba(255,0,0,0.3)\",\n    deaths: \"rgba(0,0,255,0.3)\",\n    recovered: \"rgba(0,255,0,0.3)\",\n  };\n  return OPTIONS[option];\n};\n\nexport const sortFunction = (a, b) => {\n  return a[1] - b[1];\n};\n\nexport const formatPoints = (obj) => {\n  let points = [];\n  const array = Object.entries(obj);\n\n  for (let i = 2; i < array.length; i++) {\n    let prevDiff = array[i - 1][1] - array[i - 2][1];\n    let currDiff = array[i][1] - array[i - 1][1];\n    let todayGrowthRate = (prevDiff / currDiff) * 100;\n    let date = array[i][0];\n\n    let newPoint = {\n      x: date,\n      y: todayGrowthRate,\n    };\n    points.push(newPoint);\n  }\n  return points;\n};\n\nexport const findRelativeDiameter = (high, present) => {\n  const MAX = 500;\n  const diameter = (present / high) * MAX;\n  return diameter;\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { formatNumber, formatNewNumber } from \"../util\";\nimport { setOption } from \"../Actions/option\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: 15,\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,0,0.05)\",\n    },\n  },\n}));\n\nconst SimpleCard = ({ title, _new, total, thisOption }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(setOption(thisOption));\n  };\n\n  return (\n    <Paper className={classes.root} onClick={handleClick}>\n      <Typography>{title}</Typography>\n      <Typography variant=\"h5\">{formatNewNumber(_new)} today</Typography>\n      <Typography>{formatNumber(total)} total</Typography>\n    </Paper>\n  );\n};\n\nexport default SimpleCard;\n","export const setOption = (option) => ({ type: \"SET_OPTION\", payload: option });\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setChoosenCountry } from \"../Actions/choosenCountry\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst Header = ({ lg }) => {\n  const dispatch = useDispatch();\n  const { choosenCountry } = useSelector((state) => state);\n\n  const MenuItemElements = () => {\n    const countryNames = useSelector((state) => {\n      const { countries } = state;\n      const allNames = countries.map((eachCountry) => eachCountry.name);\n      allNames.sort();\n      allNames.unshift(\"World Wide\", \"Sri Lanka\");\n      return allNames;\n    });\n\n    const elements = countryNames.map((name) => (\n      <MenuItem key={name} value={name}>\n        {name}\n      </MenuItem>\n    ));\n    return elements;\n  };\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"outlined\"\n        value={choosenCountry}\n        onChange={(event) => dispatch(setChoosenCountry(event.target.value))}\n      >\n        {MenuItemElements()}\n      </Select>\n    </FormControl>\n  );\n};\nexport default Header;\n","export const setChoosenCountry = (name) => ({\n  type: \"SET_CHOOSEN_COUNTRY\",\n  payload: name,\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SimpleCard from \"./SimpleCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"./Header\";\n\nconst SimpleCardList = ({ lg, xs }) => {\n  const {\n    cases,\n    newCases,\n    recovered,\n    newRecovered,\n    deaths,\n    newDeaths,\n  } = useSelector((state) => {\n    const { choosenCountry, countries, global } = state;\n    if (choosenCountry === \"World Wide\") {\n      return global;\n    }\n    return countries.filter(\n      (eachCountry) => eachCountry.name === choosenCountry\n    )[0];\n  });\n\n  return (\n    <Grid item container spacing={2}>\n      <Grid item lg={lg} xs={xs}>\n        <SimpleCard\n          thisOption=\"cases\"\n          title=\"Covid virus cases\"\n          _new={newCases}\n          total={cases}\n        />\n      </Grid>\n      <Grid item lg={lg} xs={xs}>\n        <SimpleCard\n          title=\"Recovered\"\n          thisOption=\"recovered\"\n          _new={newRecovered}\n          total={recovered}\n        />\n      </Grid>\n      <Grid item lg={lg} xs={xs}>\n        <SimpleCard\n          title=\"Deaths\"\n          thisOption=\"deaths\"\n          _new={newDeaths}\n          total={deaths}\n        />\n      </Grid>\n      <Grid item lg={lg} xs={xs}>\n        <Header />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SimpleCardList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 1,\n    height: 1,\n    borderRadius: \"50%\",\n  },\n}));\n\nconst Marker = ({ lat, lng, style }) => {\n  const classes = useStyles();\n\n  return (\n    <div lat={lat} lng={lng}>\n      <div className={clsx(classes.root, style)} />\n    </div>\n  );\n};\n\nexport default Marker;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Line } from \"react-chartjs-2\";\nimport { formatPoints, formatPercentage, getColor } from \"../util\";\n\nconst LineGraph = () => {\n  const [points, setPoints] = useState([]);\n  const { option } = useSelector((state) => state);\n\n  const data = {\n    datasets: [\n      {\n        data: points,\n        backgroundColor: getColor(option),\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 0,\n        pointRadius: 0,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: getColor(option),\n        pointHoverBorderWidth: 0,\n      },\n    ],\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: (tooltipItem, data) => formatPercentage(tooltipItem.value),\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: (value, index, values) => formatPercentage(value),\n          },\n        },\n      ],\n    },\n  };\n\n  useEffect(() => {\n    fetch(\"https://www.disease.sh/v3/covid-19/historical/all?lastdays=100\")\n      .then((response) => response.json())\n      .then((data) => {\n        const dataToDisplay = data[option];\n        setPoints(formatPoints(dataToDisplay));\n      });\n  }, [option]);\n\n  return (\n    <div>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LineGraph from \"./LineGraph\";\nimport { sortBy, formatNumber } from \"../util.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"638px\",\n  },\n  table: {\n    margin: \"5px\",\n    height: \"440px\",\n    overflow: \"scroll\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    \"&:nth-child(even)\": {\n      backgroundColor: \"#f2f2f2\",\n    },\n  },\n}));\n\nconst Summary = ({ lg, xs }) => {\n  const classes = useStyles();\n  const { option } = useSelector((state) => state);\n\n  useEffect(() => {}, [option]);\n\n  const data = useSelector((state) => {\n    const foundData = state.countries.map((eachCountry) => ({\n      name: eachCountry.name,\n      total: eachCountry[option],\n    }));\n    const sortFunction = sortBy(state.option);\n    foundData.sort(sortFunction);\n    return foundData;\n  });\n\n  const table = () => {\n    const rowElements = data.map((eachData) => (\n      <tr className={classes.row}>\n        <td>{eachData.name}</td>\n        <td>{formatNumber(eachData.total)}</td>\n      </tr>\n    ));\n    return rowElements;\n  };\n\n  return (\n    <Grid item lg={lg} xs={xs}>\n      <Paper className={classes.root}>\n        <h3>Live cases by country</h3>\n        <div className={classes.table}>{table()}</div>\n        <span>daily growth</span>\n        <LineGraph />\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Summary;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setCountries } from \"./Actions/countries\";\nimport { setGlobal } from \"./Actions/global\";\nimport SimpleCardList from \"./Components/SimpleCardList\";\nimport Map from \"./Components/Map\";\nimport Summary from \"./Components/Summary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"85%\",\n  },\n  title: {\n    margin: 20,\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch(\"https://www.disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => dispatch(setCountries(data)));\n\n    fetch(\"https://www.disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => dispatch(setGlobal(data)));\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <center>\n      <Typography variant=\"h4\" className={classes.title}>\n        COVID-19 TRACKER\n      </Typography>\n      <Grid container spacing={2} className={classes.root}>\n        <SimpleCardList lg={3} xs={6} />\n        <Map lg={9} xs={12} />\n        <Summary lg={3} xs={12} />\n      </Grid>\n    </center>\n  );\n};\n\nexport default App;\n","export const setCountries = (data) => ({\n  type: \"SET_COUNTRIES\",\n  payload: data,\n});\n","export const setGlobal = (data) => ({\n  type: \"SET_GLOBAL\",\n  payload: data,\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Reducers\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}